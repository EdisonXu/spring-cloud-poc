<?xml version="1.0" encoding="UTF-8" ?>
<!--
       Copyright 2015-2016 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edi.services.mapper.ProductMapper">

    <cache
            eviction="LRU"
            flushInterval="60000"
            readOnly="true"/>

    <select id="readProduct" resultType="com.edi.common.domain.Product">
        select p.id, p.name ,p.amount+s.stock as amount from product p
        left join (select product_id, SUM(IF(event='REDUCE', -amount, amount)) stock from inventory_event group by product_id ) s on p.id=s.product_id
        where agg_id in (select MAX(agg_id) from product
            where event_type=#{event}
            <choose>
                <when test="id!=null">
                    AND id=#{id}
                </when>
                <otherwise>
                    GROUP BY id
                </otherwise>
            </choose>
        )
    </select>

    <insert id="insertProduct" flushCache="true">
        insert into product (
        <trim prefixOverrides=",">
            <if test="aggId!=null">agg_id</if>
            <if test="event!=null">,event_type</if>
            <if test="id!=null">,id</if>
            <if test="name!=null">,name</if>
            <if test="amount!=null">,amount</if>
        </trim>
        ) values (
        <trim prefixOverrides=",">
            <if test="aggId!=null">#{aggId}</if>
            <if test="event!=null">,#{event}</if>
            <if test="id!=null">,#{id}</if>
            <if test="name!=null">,#{name}</if>
            <if test="amount!=null">,#{amount}</if>
        </trim>
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List" flushCache="true">
        insert into product(agg_id, event_type, order_id, product_id, product_amt, state) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.aggId}, #{item.event}, #{item.orderId}, #{item.id}, #{item.amount}, #{item.state})
        </foreach>
    </insert>

    <update id="updateProduct" flushCache="true">
        update product
        <trim prefix="SET" suffixOverrides=",">
            <if test="aggId!=null">agg_id=#{aggId},</if>
            <if test="event!=null">event_type=#{event},</if>
            <if test="id!=null">id=#{id},</if>
            <if test="name!=null">name=#{name},</if>
            <if test="amount!=null">amount=#{amount},</if>
        </trim>
        <where>
            id=#{id}
        </where>
    </update>

    <delete id="deleteProduct" flushCache="true">
        delete from product <where> id=#{id} </where>
    </delete>

    <insert id="updateInventory" parameterType="java.util.List" flushCache="true">
        insert into inventory_event (agg_id, event_type, product_id, event, amount) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.aggId}, #{item.event}, #{item.targetId}, #{item.eventType}, #{item.amount})
        </foreach>
    </insert>
</mapper>